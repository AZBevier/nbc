

                      MPX-32TM C Compiler
                         Revision 1.0.0


                READ BEFORE USING REVISION 1.0.0


  These Software Release Notes contain specific information to this 
  release, including usage information that is not included in the 
  online documentation set.


  August 1992







  324-008150-000


  This manual is supplied without representation or warranty of any kind. 
  Encore Computer Corporation assumes no responsibility and shall have 
  no liability of any kind arising from supply or use of this publication 
  or any material contained herein.

  The information contained herein is proprietary to Encore Computer 
  Corporation and/or its vendors, and its use or disclosure is subject to 
  the restrictions stated in the standard Encore Computer Corporation 
  License terms and conditions or the appropriate third-party sublicense 
  agreement.

  Use, duplication or disclosure by the Government is subject to 
  restrictions as set forth in subdivision (c) (1) (ii) of the Rights in 
  Technical Data and Computer Software clause at 252.227.7013.
  











  MPX-32 is a trademark of Encore Computer Corporation.

  CONCEPT/32 is a registered trademark of Encore Computer Corporation.

  UNIX is a registered trademark of Unix Systems Laboratories, Inc.


  Encore Computer Corporation
  6901 West Sunrise Boulevard
  Fort Lauderdale, Florida 33313

  Copyright 1992 by Encore Computer Corporation and J B Systems
  ALL RIGHTS RESERVED
  Printed in U.S.A.
  
  
Contents
-------------------------------------------------------------
  
  1  Overview	
  
     INTRODUCTION
     DOCUMENTATION CONVENTIONS
  
  2  Contents of this Revision
  
     INTRODUCTION
     BINARY DISTRIBUTION
       Model Numbers
       Revision Date
     PREREQUISITE
     DOCUMENTATION DELIVERED WITH THIS PRODUCT
     RELATED DOCUMENTATION
  
  3  Product Information
  
     PRODUCT DESCRIPTION
     RELEASE HISTORY
     PACKAGE FORMAT
     BINARY PACKAGE DISK SPACE REQUIREMENTS
     BINARY TAPE FORMAT
     INSTALLATION ENVIRONMENT REQUIREMENTS
  
  4  Installation and Configuration
  
     BINARY INSTALLATION INSTRUCTIONS
     SOFTWARE CONFIGURATION
  
  5  Product Hints
  
     GENERAL HINTS
  
  6  Known Problems
  
  A  Binary Tape Contents
  
  
1  Overview
-------------------------------------------------------------
  
INTRODUCTION      
  
  This document is provided to customers purchasing MPX-32 C Compiler 
  Revision 1.0.0 for use with the MPX-32 Operating System Revision 3.0 or 
  later.  It describes the MPX-32 C Compiler as well as providing other 
  revision-specific information.
  
  IMPORTANT:  Read the Software Release Notes before attempting to install 
  or use the Revision 1.0.0 software.  Besides providing an overview of 
  the revision, this document contains critical, late-breaking information 
  about the product that is not documented elsewhere.
  
  This information appears on the product tape as SRN_NBC_1.0.0.  This 
  upper/lowercase file can be printed from TSM or examined online. Note 
  that the hardcopy and installation-tape versions may differ because of 
  last minute changes.
  
DOCUMENTATION CONVENTIONS     
  
  The following typographic conventions apply only to the hardcopy version 
  of this document.   
  
  boldface   In command lines, boldface words are literals that must be 
             entered exactly as shown.  For example: 
  
              TSM> OPCOM LIST
  
  Non-Proportional Type
             In file entries, information in non-proportional type must be 
             entered exactly as shown. For example:
  
              struct dqe *dqeptr;
  
             In messages, information in non-proportional type is text 
             written by the system. For example:
  
              NBC: Compiler error
  
  italics    In file entries and command syntax, information you provide 
             is printed in italics.
  
             Example file entry:
  
              TSM>$USERNAME name
  
             Example command syntax:
  
              from file
  
             In system messages, variable information is printed in italics. 
             For example:
  
              UNABLE TO DELETE FILE - VMxx
  
             Note:  In text, italics are used for emphasis.
  
  braces     When braces surround parameters that are separated by a 
             vertical bar(s), only one parameter is required. For example:
  
              $ASSIGN {LO | ER} TO pathname
  
  Brackets
             In command syntax, parameters inside brackets are optional. 
             For example:
  
              from [file]
  
  Horizontal Ellipses
             In text and messages, horizontal ellipses indicate that similar 
             information has been omitted. For example:
  
              RPAR? [1,2,...,22]
  
  Vertical Ellipses
             Vertical ellipses in command syntax, file entries, and messages 
             indicate that similar lines have been omitted. For example:
  
              PAD: RPAR 2:v
                .
                .
                .
              PAD: RPAR 22:v
  
  Control Characters
             A circumflex (^) immediately followed by a capital letter 
             indicates a control-character sequence. To enter a 
             control-character sequence, press and hold the control key 
             (labeled Ctrl or CTRL) while typing the specified character.  
             For example:
  
              ^X
  
  
2   Contents of this Revision
-------------------------------------------------------------
  
INTRODUCTION     
  
  Information on various MPX-32 C Compiler distribution components is 
  given in this chapter, as are model numbers.  The following are the 
  components of the distribution:
  
   o Binary tape

   o Documentation
  
BINARY DISTRIBUTION     
  
Model Numbers    
  
  The following model numbers apply to the binary distribution.
  
   Tape                   Model Number     System
  
   Binary Single System    1012-3303       32/27, 32/67, SelCONNECTION
                                           running MPX-32 3.x
  
   Binary Single System    1012-4303       32/87, 32/97
                                           running MPX-32 3.x
  
   Binary Single System    1012-5303       32/2030, 32/2040
                                           running MPX-32 3.x
  
   Binary Single System    1012-6303       32/2050, RSX
                                           running MPX-32 3.x
  
Revision Date    
  
   August 1992
  
PREREQUISITE     
  
  Encore Proprietary Software License Form.
  
  Also see the installation requirements in Chapter 3.
  
DOCUMENTATION DELIVERED WITH THIS PRODUCT     

  One set of the following documentation is supplied with Model No. 
  1012-(3/4/5/6)303.  Additional copies of this document can be 
  ordered by part number.

  Part No.	   Description

  DS-1012-3        MPX-32 C Compiler for MPX-32 Revision 3.x
                   Documentation Set which includes:

  324-008150-000   MPX-32 C Compiler Revision 1.0.0 
                   Software Release Notes

  Online documentation for the MPX-32 C Compiler Revision 1.0.0 is 
  provided on the product tape.

RELATED DOCUMENTATION      

  The C Programming Language by Kernighan & Ritchie.

  MPX-32 Revision 3.x Reference Manual Volumes I through IV, 
  323-00155(1/2/3/4)

  MPX-32 Revision 3.x Technical Manual Volumes I and II, 322-00155(1/2)


3  Product Information
-------------------------------------------------------------

PRODUCT DESCRIPTION     

  The MPX-32 C Compiler operates in one or two pass mode.  It generates 
  assembler language instructions which can optionally have the source 
  C code intermixed as comments.  Compile time options allow support for 
  register to register floating point instructions or only register to 
  memory instructions to support 32/27 systems.  The debug option allows 
  symbols to be passed through to the Cataloger for display with the 
  task debugger.

  The C runtime library provides an emulated UNIX System V interface to 
  MPX-32.  Most of the standard library functions are provided where 
  emulation was possible without O/S modifications.  Functions are also 
  provided to directly access MPX-32 SVCs where UNIX compatibility is not 
  desired.  MPX-32 SVCs can also be called as in-line assembler 
  instructions. An additional option also allows nonsectioned code to be 
  generated.  This allows functions written in C to be SYSGENed into the 
  MPX-32 operating system.

RELEASE HISTORY     
    
      Description        Level              Date
  
      Original Release   Revision 1.0.0     August 1992
  
PACKAGE FORMAT     

  The MPX-32 C Compiler Revision 1.0.0 tape is a standard 1/2" 9-track 
  magnetic reel recorded at 1600 bpi.

BINARY PACKAGE DISK SPACE REQUIREMENTS     

  To use this binary installation package, adequate disk space must be 
  available on the system. A minimum of approximately 6100 blocks of 
  available disk space are required for this installation. (Space for 
  temporary and SLO files is not included.)
  
BINARY TAPE FORMAT     

  The binary tape contains 99 files in eight Volume Manager save images. 
  Refer to Appendix A of this document for a complete list of the images 
  and files contained on the binary tape.

INSTALLATION ENVIRONMENT REQUIREMENTS     

  The following are physical requirements for installation.

  o One compatible input device for the distribution medium:

          1/2" 9-track tape drive

  o One compatible auxiliary input device for batch processing:

          One TSM terminal (with lowercase capability)

  o Adequate disk space (see Disk Space section).

  The following software must be installed:

  o The following operating system:

          1401 MPX-32 Operating System Revision 3.0 or later

  o The following product installed on that system:

          1407 MPX-32 Utilities Revision 1.3 or later


4  Installation and Configuration
-------------------------------------------------------------

BINARY INSTALLATION INSTRUCTIONS     

  To install the MPX-32 C Compiler Revision 1.0.0 binary tape
  on your system, perform the following procedures:

  1.  Mount the installation tape on the appropriate unit.

        TSM>AS TAP TO DEV=devmnc BLOC=N

  2.  Invoke the Volume Manager and ensure that the tape is positioned 
      by rewinding the tape.

        TSM>VOLMGR
        VOL>REWIND

  3.  Skip the first image which contains this SRN file.

        VOL>SKIP I

  4.  Restore the online documentation files.

        VOL>RESTORE VOLUME=SYSTEM

  5.  Restore the system programs and command files.

        VOL>RESTORE VOLUME=SYSTEM

  6.  Restore the compiler programs, utilities and command files.

        VOL>RESTORE VOLUME=SYSTEM

  7.  Restore the include files.

        VOL>RESTORE VOLUME=SYSTEM

  8.  Restore the C runtime library.

        VOL>RESTORE VOLUME=SYSTEM
  
  9.  Restore the skeleton parser driver.

        VOL>RESTORE VOLUME=SYSTEM

  10. Optionally, restore the sample C code and programs.

        VOL>RESTORE VOLUME=SYSTEM

  11. Rewind the tape and exit the Volume Manager.

        VOL>REWIND
        VOL>EXIT
  
SOFTWARE CONFIGURATION     

  The MPX-32 C Compiler is ready to run after installation is complete.  
  The documentation files (in the DOC directory) may be viewed by the 
  following:

      TSM>^(bin)cat <^(DOC)xxxx.m

          or

      TSM>^(bin)cat /system/doc/xxxx.m

  This displays the selected documentation file.

  The SAMPLE directory and the source code for the sample programs 
  should be reviewed to see some of the capabilities of the MPX-32 
  C Compiler.  The TSM macro MAK.SAMP should be run to see if the 
  compiler operates properly on your system.  The programs CAT and 
  FIXER can be cataloged using the TSM macro NBLD as follows:

      TSM>NBLD cat catmap

  This builds the program CAT in the local directory.

      TSM>NBLD fixer fixermap

  This builds the program FIXER in the local directory.


5  Product Hints
-------------------------------------------------------------

GENERAL HINTS      

  The NBLD macro should be modified when several programs are to be 
  combined to form a load module.  Add the names of the object files 
  that are to be included after the COMPRESS directive.  This 
  combines all of the non-runtime library objects for cataloging.

  The default startup code is C.SRTE.O.  It allocates the stack and 
  I/O area in extended memory starting at 0x80000. The program 
  starts in extended mode.  If it is desirable to run in nonextended 
  mode, the object module C.SRT.O should be included to allow the 
  program to startup in nonextended mode.  This would usually be the 
  case when interfacing with FORTRAN subroutines.

  The source code for C.SRT.C and C.SRTE.C are included. These are the 
  nonextended and extended mode versions of the startup code.  They 
  assume a 12KW stack.  If a larger or smaller stack is desired, modify 
  these programs for your specific needs.

  The source code for FCALL.S is also included. Due to variations in 
  FORTRAN calling conventions, it may be necessary to modify this 
  interface subroutine.

  The C runtime library is implemented using the UNIX System V interface.  
  Consult any System V reference manual for calling conventions.  Also, 
  review the include files in the NBINCLUDE directory.

  The preprocessor, NBCPP, searches both the NBINCLUDE and CINCLUDE 
  directories for include files (other versions of the MPX-32 C Compiler 
  use the CINCLUDE directory for include files).  Make sure the 
  CINCLUDE directory is empty or does not contain any outdated 
  include files.  See NBCPP.M in the DOC directory.

  The load module, NBYACC, is included with the MPX-32 C Compiler as an 
  unsupported utility.  It may or may not be removed in future releases 
  of this product.  No System Problem Reports (SPRs) will be accepted 
  for this utility.

  The MPX-32 C Compiler and runtime library are compatible with T-XPM.  
  They run as T-XPM tasks without any problems.


6  Known Problems
-------------------------------------------------------------

  The one pass version of the MPX-32 C Compiler, NBCCOM, is quite large 
  and may not run on systems with limited task execution space.  If this 
  is the case, use the -2 option to NBCC to invoke the two pass version 
  of the compiler.


A  Binary Tape Contents
-------------------------------------------------------------

  Note:	If considering moving the MPX-32 C Compiler files to the 
  system directory, check first for identical file names that will 
  overwrite existing files (for example, CAT).

  The eight Volume Manager save images are as follows:

  o Image 1 contains this SRN
  o Image 2 contains online documentation files
  o Image 3 contains system programs and command files 
  o Image 4 contains compiler programs, utilities and command files
  o Image 5 contains include files
  o Image 6 contains the C runtime library
  o Image 7 contains the skeleton parser driver
  o Image 8 contains sample C code and programs

  Files	     Contents      Description

  Image 1
  
  1   (DOC)SRN_NBC_1.0.0  This SRN

  Image 2
  
  1   (DOC)NBCAS.M        Assembler Documentation
  2   (DOC)NBCC.M         Compiler Driver Documentation
  3   (DOC)NBCCOM.M       Compiler Documentation
  4   (DOC)NBCPP.M        Preprocessor Documentation
  5   (DOC)NBYACC.M       YACC Documentation
  6   (DOC)SRN_NBC_1.0.0  This SRN
  7-n (DOC)XXXX.M         Other Documentation

  Image 3
  
  1   (SYSTEM)NBCC        C Compiler Driver
  2   (SYSTEM)NBLD        TSM Macro to Catalog C Programs
  3   (SYSTEM)NBYACC      YACC Load Module

  Image 4
    
  1   (BIN)C.SRT.O        Nonextended Startup Object Code
  2   (BIN)C.SRTE.O       Extended Startup Object Code
  3   (BIN)CAT            Demo Utility from Sample Directory
  4   (BIN)CDR            C Runtime Library Directory
  5   (BIN)CLB            C Runtime Library
  6   (BIN)FIXER          Demo Utility from Sample Directory
  7   (BIN)NBCAS          Modified MPX-32 Assembler
  8   (BIN)NBCC           C Compiler Driver
  9   (BIN)NBCCOM         Combined Compiler and Code Generator
  10  (BIN)NBCP1          Pass One of Two Pass Compiler
  11  (BIN)NBCP2          Pass Two of Two Pass Compiler
  12  (BIN)NBCPP          C Preprocessor
  13  (BIN)NBLD           TSM Macro to Catalog C Programs
  14  (BIN)NBYACC         Yet Another Compiler Compiler
  
  Image 5
    
  1   (NBINCLUDE)A.OUT.H  C Include Files
  2   (NBINCLUDE)ART.H
  3   (NBINCLUDE)ASSERT.H
  4   (NBINCLUDE)CDOTS.H
  5   (NBINCLUDE)CTYPE.H
  6   (NBINCLUDE)DCA.H
  7   (NBINCLUDE)DIR.H
  8   (NBINCLUDE)DIRENT.H
  9   (NBINCLUDE)DQE.H
  10  (NBINCLUDE)ERRNO.H
  11  (NBINCLUDE)FAT.H
  12  (NBINCLUDE)FCB.H
  13  (NBINCLUDE)FCNTL.H
  14  (NBINCLUDE)FINFO.H
  15  (NBINCLUDE)IDENT.H
  16  (NBINCLUDE)IOQ.H
  17  (NBINCLUDE)LIMITS.H
  18  (NBINCLUDE)MATH.H
  19  (NBINCLUDE)MOSDE.H
  20  (NBINCLUDE)MPXDEF.H
  21  (NBINCLUDE)MPXSVC.H
  22  (NBINCLUDE)NAN.H
  23  (NBINCLUDE)PARAM.H
  24  (NBINCLUDE)PRB.H
  25  (NBINCLUDE)PSB.H
  26  (NBINCLUDE)RXB.H
  27  (NBINCLUDE)SEARCH.H
  28  (NBINCLUDE)SETJMP.H
  29  (NBINCLUDE)SIGNAL.H
  30  (NBINCLUDE)SMT.H
  31  (NBINCLUDE)STAB.H
  32  (NBINCLUDE)STAT.H
  33  (NBINCLUDE)STDIO.H
  34  (NBINCLUDE)STRING.H
  35  (NBINCLUDE)TERMIO.H
  36  (NBINCLUDE)TIME.H
  37  (NBINCLUDE)TIMEB.H
  38  (NBINCLUDE)TIMES.H
  39  (NBINCLUDE)TSA.H
  40  (NBINCLUDE)TYPES.H
  41  (NBINCLUDE)UDT.H
  42  (NBINCLUDE)UNIXIO.H
  43  (NBINCLUDE)UTMP.H
  44  (NBINCLUDE)VALUES.H
  45  (NBINCLUDE)VARARGS.H
  46  (NBINCLUDE)VERSION.H

  Image 6
    
  1   (NBLIB)C.SRT.O      Nonextended Startup Object Code
  2   (NBLIB)C.SRT.S      Nonextended Startup Source Code
  3   (NBLIB)C.SRTE.O     Extended Startup Object Code
  4   (NBLIB)C.SRTE.S     Extended Startup Source Code
  5   (NBLIB)CDR          C Runtime Library Directory
  6   (NBLIB)CLB          C Runtime Library
  7   (NBLIB)FCALL.S      C Interface to FORTRAN Subroutines
  8   (NBLIB)FPS.C        Floating Point Conversion Source

  Image 7
    
  1   (LIB)YACCPAR        YACC Skeleton Parser Driver

  Image 8
    
  1   (SAMPLE)CAT         Demo Utility Program
  2   (SAMPLE)CAT.C       Source Code for CAT
  3   (SAMPLE)CAT.L       Assembler Output Listing for CAT
  4   (SAMPLE)CAT.O       Object Code for CAT
  5   (SAMPLE)CATMAP      Catalog Loadmap for CAT
  6   (SAMPLE)FIXER       Demo Utility Program
  7   (SAMPLE)FIXER.C     Source Code for FIXER
  8   (SAMPLE)FIXER.L     Assembler Output Listing for FIXER
  9   (SAMPLE)FIXER.O     Object Code for FIXER
  10  (SAMPLE)FIXERMAP    Catalog Loadmap for FIXER
  11  (SAMPLE)FORT.C      FORTRAN Subroutine Calling Example
  12  (SAMPLE)FORT.L      Assembler Output Listing of FORT.C
  13  (SAMPLE)FORT.O      Object Code for FORT.C
  14  (SAMPLE)KILL.C      MPX-32 SVC Calling Example
  15  (SAMPLE)KILL.L      Assembler Output Listing of KILL.C
  16  (SAMPLE)KILL.O      Object Code for KILL.C
  17  (SAMPLE)MAK.SAMP    TSM Macro to Compile Sample Programs
  18  (SAMPLE)PRTINC.C    Subroutine to Include Memory Partition
  19  (SAMPLE)PRTINC.L    Assembler Output Listing of PRTINC.C
  20  (SAMPLE)PRTINC.O    Object Code for PRTINC.C

