head	1.2;
access;
symbols;
locks
	jbev:1.2; strict;
comment	@# @;


1.2
date	96.01.13.23.16.40;	author jbev;	state Exp;
branches;
next	1.1;

1.1
date	95.08.08.23.27.14;	author jbev;	state Exp;
branches;
next	;


desc
@Initial RCS file.
@


1.2
log
@Add float.h to dependency for parse.c
@
text
@#~!Makefile for nbasm
# Name:  Makefile Part No.: _______-____r
#
# make depend 		# adds dependencies to makefile
# make clean		# deletes objects
# make clobber		# deletes load module and objects
# make all		# makes everything
# make			# makes everything, defaults to make all
# make library		# updates only library
# make install		# does make all, then copies load module
#			# to system directory

#ident	"@@(#)Make:nbasm/Makefile	1.0"

# Make parameters when running on MPX

ROOT = /system/system
TARGET = /system/system
SOURCE = .
PREFIX = nb
INCLUDE = /system/$(PREFIX)include
SINCLUDE = $(INCLUDE)
SBIN = /system/system
BIN = /system/bin
UBIN = /system/bin
LIB = /system/bin
YBIN = /system/bin
CPP = $(LIB)/$(PREFIX)cpp
CPFLAGS = -M -DMYATOF
CC = $(UBIN)/$(PREFIX)cc
CFLAGS = -DMPX -DMYATOF
LD = $(UBIN)/$(PREFIX)nbcat
YACC = $(YBIN)/$(PREFIX)yacc
YFLAGS =
MAKEFILE = makefile

# loadmap file for nbcat output
LDFLAGS = -Ynbasmmap

HDRS	= defs.h

SRCS 	= main.c macro.c goasm.c parse.c io.c opcode.c pseudo.c symbol.c \
	dummy.c float.c myatof.c

OBJECTS	= main.o macro.o goasm.o parse.o io.o opcode.o pseudo.o symbol.o \
	dummy.o float.o myatof.o

# loadmodule name
MAIN = nbasm

ALL:	all

all:	$(MAIN)			# build everything
	$(BIN)/echo $(MAIN) is up to date.

$(MAIN):	$(MAKEFILE) $(OBJECTS)  # build main
	$(CC) $(LDFLAGS) $(OBJECTS) -o $(MAIN)
	$(BIN)/chmod 775 $(MAIN)
	$(BIN)/chgrp system $(MAIN)
	$(BIN)/chown system $(MAIN)

CLEAN:  clean

clean:				# delete object files
	$(BIN)/rm -f $(OBJECTS)

CLOBBER: clobber

clobber: clean			# delete main from current directory
	$(BIN)/rm -f $(MAIN)
	$(BIN)/rm -f nbasmmap

DEPEND: depend

depend: $(SRCS) $(HDRS) $(MAKEFILE)	# generate dependencies
	$(BIN)/dodep $(CPFLAGS) $(MAKEFILE) $(SRCS) >dep.out
	$(BIN)/mv dep.out $(MAKEFILE)

#	$(BIN)/mkdep $(MAKEFILE) >dep.out
#	@@for i in $(SRCS); do \
#	$(BIN)/echo "# Source file '$$i'" >> dep.out; \
#	$(CPP) $(CPFLAGS) $$i >> dep.out; \
#	done;
#	$(BIN)/echo "# End of dependencies" >> dep.out;
#	$(BIN)/mv dep.out $(MAKEFILE)

INSTALL: install

install: all	# build if necessary, and then copy main to system directory
	$(BIN)/cp $(MAIN) $(SBIN)/$(MAIN)

dummy.o:	dummy.c defs.h

float.o:	float.c float.h

myatof.o:	myatof.c float.h

goasm.o:	goasm.c defs.h

io.o:	io.c defs.h

main.o:		main.c defs.h

macro.o:	macro.c defs.h

opcode.o:	opcode.c defs.h

parse.o:	parse.c defs.h float.h

pseudo.o:	pseudo.c defs.h

symbol.o:	symbol.c defs.h

# DO NOT DELETE THIS LINE -- the dependencies begin here

@


1.1
log
@Initial revision
@
text
@d108 1
a108 1
parse.o:	parse.c defs.h
@
