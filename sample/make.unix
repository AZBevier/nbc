#~!Makefile for SAMPLE directory on Unix
#
# Make parameters when running on MPX
#
CC = cc 
CFLAGS = -O -DMPX -DMYATOF -m32 # -DIEEE
#CFLAGS = -O -m32
SYSBIN = /system/bin
SYSLIB = /system/lib
LBIN = ./linux
INSTALL = cp
MOVE = mv
#YACC = yacc
MAKEFILE = make.unix

# define all sources
SRCS = cat.c dcat.c ucat.c fixer.c obd.c caid.c summer.c \
	cp.c ls.c mv.c rm.c

# define all headers
HDRS = caid.h

# loadmodule names
MAINS = cat dcat ucat fixer obd caid summer cp ls mv rm

# build everything
all:	$(HDRS) $(SRCS) $(MAINS)
	/bin/echo $(MAINS) are up to date.

#build cat
cat:	cat.o
	$(CC) $(CFLAGS) -o cat cat.o
	/bin/chmod 775 cat

#build dcat
dcat:	dcat.o
	$(CC) $(CFLAGS) -o dcat dcat.o
	/bin/chmod 775 dcat

#build ucat
ucat:	ucat.o
	$(CC) $(CFLAGS) -o ucat ucat.o
	/bin/chmod 775 ucat

#build fixer
fixer:	fixer.o
	$(CC) $(CFLAGS) -o fixer fixer.o
	/bin/chmod 775 fixer

#build obd
obd:	obd.o
	$(CC) $(CFLAGS) -o obd obd.o
	/bin/chmod 775 obd

#build caid
caid:	caid.o
	$(CC) $(CFLAGS) -o caid caid.o
	/bin/chmod 775 caid

#build summer
summer:	summer.o
	$(CC) $(CFLAGS) -o summer summer.o
	/bin/chmod 775 summer

#build cp
cp:	cp.o
	$(CC) $(CFLAGS) -o cp cp.o
	/bin/chmod 775 cp

#build ls
ls:	ls.o
	$(CC) $(CFLAGS) -o ls ls.o
	/bin/chmod 775 ls

#build mv
mv:	mv.o
	$(CC) $(CFLAGS) -o mv mv.o
	/bin/chmod 775 mv

#build rm
rm:	rm.o
	$(CC) $(CFLAGS) -o rm rm.o
	/bin/chmod 775 rm

clean:				# delete object files
	-rm -f *.o $(LBIN)/*.o

clobber: clean		# delete main from current directory
	-rm -f $(LBIN)/$(MAINS)

INSTALL: install
install: all	# build if necessary, and then copy main to bin directory
	@if [ -d $(LBIN) ]; then \
			echo "$(LBIN) already exits"; \
	else \
			mkdir $(LBIN); \
	fi;
#	$(INSTALL) $(MAINS) $(BINDIR)
	$(MOVE) $(MAINS) $(LBIN)/

