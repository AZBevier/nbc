#
# Makefile for samples when running nbccom on mpx3x
# Object files must be produced and then cataloged
# on MPX3X using the LD.NBCOM command file.
#
CC = nbcc
BIN = /bin
SLIB = /system/lib
SYSBIN = /system/bin
LBIN = ./mpx3x
CFLAGS = -C -DMPX -DMYATOF -M$(SYSBIN)/m.mpxmac3x -P$(SYSBIN)/mpxpre3x
INSTALL = cp
MOVE = mv
YACC = nbyacc
MAKEFILE = make.mpx3x
MPXMAKE = makefile

# define all source
SRCS = cat.c dcat.c ucat.c fixer.c fort.c prtinc.c obd.c caid.c \
	summer.c cp.c ls.c mv.c rm.c kill.c oscode.c recmsg.c sndmsg.c
# define all objects
OBJS = cat.o dcat.o ucat.o fixer.o fort.o prtinc.o obd.o caid.o \
	summer.o cp.o ls.o mv.o rm.o kill.o oscode.o recmsg.o sndmsg.o
# define all headers
HDRS = caid.h
# define all load module names
MAINS = cat dcat ucat fixer obd caid summer cp ls mv rm

ALLS = $(SRCS) $(HDRS)

SLD = ld.samp
LD = LD.SAMP
SMK = mak.samp
MK = MAK.SAMP
SMPXMK = makefile
MPXMK = MAKEFILE
SCNBLD = nbld3x
CNBLD = NBLD
MAIN = $(OBJS)

ALL:	all

all:	$(SLD) $(SMK) $(HDRS) $(SMPXMK) $(MAIN)
#all:	$(MAIN)
	$(BIN)/echo $(MAINS) are up to date
	$(BIN)/echo $(OBJS) objects created

#$(MAIN):	$(MAKEFILE) $(OBJS)
#	$(SYSBIN)/$(CC) $(CFLAGS) $(SRCS)

prefile:

# Source file 'cat.c'
cat.o: prefile cat.c
	$(CC) -L $(CFLAGS) -c cat.c -o cat.o

# Source file 'dcat.c'
dcat.o: prefile dcat.c
	$(CC) -L $(CFLAGS) -c dcat.c -o dcat.o

# Source file 'ucat.c'
ucat.o: prefile ucat.c
	$(CC) -L $(CFLAGS) -c ucat.c -o ucat.o

# Source file 'fixer.c'
fixer.o: prefile fixer.c
	$(CC) -L $(CFLAGS) -c fixer.c -o fixer.o

# Source file 'fort.c'
fort.o: prefile fort.c
	$(CC) -L $(CFLAGS) -c fort.c -o fort.o

# Source file 'kill.c'
kill.o: prefile kill.c
	$(CC) -L $(CFLAGS) -c kill.c -o kill.o

# Source file 'oscode.c'
oscode.o: prefile oscode.c
	$(CC) -H -L $(CFLAGS) -c oscode.c -o oscode.o

# Source file 'recmsg.c'
recmsg.o: prefile recmsg.c
	$(CC) -L $(CFLAGS) -c recmsg.c -o recmsg.o

# Source file 'sndmsg.c'
sndmsg.o: prefile sndmsg.c
	$(CC) -L $(CFLAGS) -c sndmsg.c -o sndmsg.o

# Source file 'prtinc.c'
prtinc.o: prefile prtinc.c
	$(CC) -L $(CFLAGS) -c prtinc.c -o prtinc.o

CLEAN:  clean

clean:
	# remove obj files
	rm -f *.o *.l
	@for n in $(OBJS) ; do \
		nn=`echo $$n | tr "[a-z]" "[A-Z]"` ; \
		/bin/rm -f $(LBIN)/$$nn ; \
	done

CLOBBER: clobber

clobber: clean
	# remove src files
	@for n in $(ALLS) ; do \
		nn=`echo $$n | tr "[a-z]" "[A-Z]"` ; \
		/bin/rm -f $(LBIN)/$$nn ; \
	done
	# remove LS & MK files
	-rm -f $(LBIN)/$(LD) $(LBIN)/$(MK) $(LBIN)/$(MPXMK) $(LBIN)/$(CNBLD)
	# remove listing files
	-rm -f $(LBIN)/*.L
	-rm -f *.L

INSTALL: install

install: all
	# make the mpx3x directory
	@if [ -d $(LBIN) ]; then \
			echo "$(LBIN) already exits"; \
	else \
			mkdir $(LBIN); \
	fi;
	# move in object files for MPX3X
	@for n in $(OBJS) ; do \
		nn=`echo $$n | tr "[a-z]" "[A-Z]"` ; \
		$(MOVE) $$n $(LBIN)/$$nn ; \
	done
	# copy in LS, MK, & MPXMK files
	mpxblk <$(SLD) >$(LBIN)/$(LD)
	mpxblk <$(SMK) >$(LBIN)/$(MK)
	mpxblk <$(SMPXMK) >$(LBIN)/$(MPXMK)
	mpxblk <$(SCNBLD) >$(LBIN)/$(CNBLD)
	# copy in blocked source files
	@for n in $(ALLS) ; do \
		nn=`echo $$n | tr "[a-z]" "[A-Z]"` ; \
		mpxblk <$$n >$(LBIN)/$$nn ; \
	done
	# give src & object rw access
	/bin/chmod 664 $(LBIN)/*.?
